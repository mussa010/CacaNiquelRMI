package view;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.rmi.RemoteException;
import java.text.NumberFormat;
import model.Cliente;
import java.rmi.registry.Registry;
import java.rmi.registry.LocateRegistry;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.Timer;
import service.CacaNiquelService;
import static service.CacaNiquelService.HOST;
import static service.CacaNiquelService.NOME;
import static service.CacaNiquelService.PORTA;

public class MenuCliente extends javax.swing.JFrame {
    
    private Cliente usuario;
    private boolean primeiraVez;
    private final DecimalFormat formatarSaldoAtual = new DecimalFormat();
    private Timer timer1, timer2, timer3;
    private String[] simbolo = {
        "limao", 
        "cereja", 
        "sino", 
        "diamante", 
        "sete"
    };
    private int indice1 = 0, indice2 = 0, indice3 = 0;
    
    public MenuCliente() {
        initComponents();
        
        this.setResizable(false);
        this.setTitle("Caça-níquel");
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        
        btnAdicionarSaldo.setSelected(false);
        btnVerificarHistorico.setSelected(false);
        primeiraVez = true;
        
        simbolo1.setPreferredSize(new Dimension(140,184));
        simbolo2.setPreferredSize(new Dimension(140,184));
        simbolo3.setPreferredSize(new Dimension(140,184));
        
        formatarSaldoAtual.applyPattern("#,##0.00");
        lblSimbolo1.setText("");
        lblSimbolo2.setText("");
        lblSimbolo3.setText("");
        
    }
    
    public MenuCliente(Cliente c) {
        this();
        usuario = c;
        
        if(!usuario.getHist().isEmpty()) {
            primeiraVez = false;
            lblSimbolo1.setIcon(new ImageIcon(this.getClass().getResource(retornaCaminhoImagemSimbolo(usuario.getHist().get(0).getResultado1()))));
            lblSimbolo2.setIcon(new ImageIcon(this.getClass().getResource(retornaCaminhoImagemSimbolo(usuario.getHist().get(0).getResultado2()))));
            lblSimbolo3.setIcon(new ImageIcon(this.getClass().getResource(retornaCaminhoImagemSimbolo(usuario.getHist().get(0).getResultado3()))));
        }
        
        lblValorSaldo.setText(formatarSaldoAtual.format(usuario.getSaldo()));
        inverteLblSimbolos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        area = new javax.swing.JPanel();
        lblSaldo = new javax.swing.JLabel();
        tbOpcoes = new javax.swing.JToolBar();
        btnAdicionarSaldo = new javax.swing.JButton();
        btnVerificarHistorico = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        lblValorSaldo = new javax.swing.JLabel();
        simbolo3 = new javax.swing.JPanel();
        lblSimbolo3 = new javax.swing.JLabel();
        btnJogar = new javax.swing.JButton();
        simbolo2 = new javax.swing.JPanel();
        lblSimbolo2 = new javax.swing.JLabel();
        simbolo1 = new javax.swing.JPanel();
        lblSimbolo1 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        area.setBackground(new java.awt.Color(0, 51, 102));
        area.setMaximumSize(new java.awt.Dimension(890, 662));
        area.setMinimumSize(new java.awt.Dimension(890, 662));

        lblSaldo.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        lblSaldo.setForeground(new java.awt.Color(255, 255, 255));
        lblSaldo.setText("Saldo: R$");

        tbOpcoes.setRollover(true);
        tbOpcoes.setMaximumSize(new java.awt.Dimension(890, 600));
        tbOpcoes.setMinimumSize(new java.awt.Dimension(890, 600));

        btnAdicionarSaldo.setText("Adicionar saldo");
        btnAdicionarSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarSaldoActionPerformed(evt);
            }
        });
        tbOpcoes.add(btnAdicionarSaldo);

        btnVerificarHistorico.setText("Verificar histórico");
        btnVerificarHistorico.setFocusable(false);
        btnVerificarHistorico.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVerificarHistorico.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVerificarHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerificarHistoricoActionPerformed(evt);
            }
        });
        tbOpcoes.add(btnVerificarHistorico);

        btnSair.setText("Sair");
        btnSair.setFocusable(false);
        btnSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        tbOpcoes.add(btnSair);

        lblValorSaldo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblValorSaldo.setForeground(new java.awt.Color(255, 255, 255));
        lblValorSaldo.setText("Valor Saldo");

        simbolo3.setMaximumSize(new java.awt.Dimension(140, 184));
        simbolo3.setMinimumSize(new java.awt.Dimension(140, 184));

        lblSimbolo3.setText("Simbolo3");

        javax.swing.GroupLayout simbolo3Layout = new javax.swing.GroupLayout(simbolo3);
        simbolo3.setLayout(simbolo3Layout);
        simbolo3Layout.setHorizontalGroup(
            simbolo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, simbolo3Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(lblSimbolo3)
                .addGap(44, 44, 44))
        );
        simbolo3Layout.setVerticalGroup(
            simbolo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, simbolo3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSimbolo3)
                .addGap(83, 83, 83))
        );

        btnJogar.setBackground(new java.awt.Color(0, 51, 102));
        btnJogar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnJogar.setForeground(new java.awt.Color(255, 255, 255));
        btnJogar.setText("JOGAR");
        btnJogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJogarActionPerformed(evt);
            }
        });

        simbolo2.setMaximumSize(new java.awt.Dimension(140, 184));
        simbolo2.setMinimumSize(new java.awt.Dimension(140, 184));

        lblSimbolo2.setText("Simbolo2");

        javax.swing.GroupLayout simbolo2Layout = new javax.swing.GroupLayout(simbolo2);
        simbolo2.setLayout(simbolo2Layout);
        simbolo2Layout.setHorizontalGroup(
            simbolo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, simbolo2Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(lblSimbolo2)
                .addGap(44, 44, 44))
        );
        simbolo2Layout.setVerticalGroup(
            simbolo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, simbolo2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSimbolo2)
                .addGap(83, 83, 83))
        );

        simbolo1.setMaximumSize(new java.awt.Dimension(140, 184));
        simbolo1.setMinimumSize(new java.awt.Dimension(140, 184));

        lblSimbolo1.setText("Simbolo1");

        javax.swing.GroupLayout simbolo1Layout = new javax.swing.GroupLayout(simbolo1);
        simbolo1.setLayout(simbolo1Layout);
        simbolo1Layout.setHorizontalGroup(
            simbolo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, simbolo1Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(lblSimbolo1)
                .addGap(44, 44, 44))
        );
        simbolo1Layout.setVerticalGroup(
            simbolo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, simbolo1Layout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addComponent(lblSimbolo1)
                .addGap(83, 83, 83))
        );

        javax.swing.GroupLayout areaLayout = new javax.swing.GroupLayout(area);
        area.setLayout(areaLayout);
        areaLayout.setHorizontalGroup(
            areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbOpcoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(areaLayout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addGroup(areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(areaLayout.createSequentialGroup()
                        .addComponent(simbolo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(simbolo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(areaLayout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(btnJogar)))
                .addGap(12, 12, 12)
                .addGroup(areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(areaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                        .addComponent(lblSaldo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblValorSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(areaLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(simbolo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        areaLayout.setVerticalGroup(
            areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(areaLayout.createSequentialGroup()
                .addComponent(tbOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValorSaldo))
                .addGap(132, 132, 132)
                .addGroup(areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(simbolo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(simbolo3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(simbolo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                .addComponent(btnJogar)
                .addGap(18, 18, 18))
        );

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(area, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarSaldoActionPerformed
        if(usuario == null){
            System.out.println("Erro: objeto usuário null");
        } else {
            AdicionarSaldo saldo = new AdicionarSaldo(usuario);
        
            saldo.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnAdicionarSaldoActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        LoginClient login = new LoginClient();
        
        this.dispose();
        login.setVisible(true);
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnJogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJogarActionPerformed
        btnJogar.setEnabled(false);
        if(primeiraVez == true) {
            primeiraVez = false;
            inverteLblSimbolos();
        }
        try {
            Registry srv = LocateRegistry.getRegistry(HOST, PORTA);
            CacaNiquelService op = (CacaNiquelService) srv.lookup(NOME);

            double saldoAntesJogada = usuario.getSaldo();

            ArrayList<String> seq = op.gerador();
            op.adicionarHistoricoUsuario(usuario, seq, saldoAntesJogada);
            usuario = op.reduzirSaldo(usuario, 10);
            lblValorSaldo.setText(formatarSaldoAtual.format(usuario.getSaldo()));
            
            lblSimbolo1.setIcon(null);
            lblSimbolo2.setIcon(null);
            lblSimbolo3.setIcon(null);

            iniciarAnimacao(seq);

            // Delay de 4 segundos
            Timer delay = new Timer(4000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    try {
                        usuario = op.aumentarSaldo(usuario, seq);
                        lblValorSaldo.setText(formatarSaldoAtual.format(usuario.getSaldo())); // Atualiza o saldo no label
                        btnJogar.setEnabled(true);
                    } catch (RemoteException ex) {
                        Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
            delay.setRepeats(false); // O timer só executa uma vez
            delay.start(); // Iniciar o timer
            
        } catch (Exception e) {
            System.err.println("Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_btnJogarActionPerformed

    private void btnVerificarHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerificarHistoricoActionPerformed
        HistoricoCliente hist = new HistoricoCliente(usuario);
        
        this.dispose();
        hist.setVisible(true);
    }//GEN-LAST:event_btnVerificarHistoricoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuCliente().setVisible(true);
            }
        });
    }
    
    private void mascaraSaldo() {
        try {
            NumberFormat formato = NumberFormat.getCurrencyInstance();
        } catch (Exception e) {
            System.err.println("Erro: " + e.getMessage());
        }
    }
    
    // Inverte visibilidade de lblSimbolo1, lblSimbolo2 e lblSimbolo3 com base 
    //no estado de primeiraVez
    private void inverteLblSimbolos() {
        lblSimbolo1.setVisible(!primeiraVez);
        lblSimbolo2.setVisible(!primeiraVez);
        lblSimbolo3.setVisible(!primeiraVez);
    }
    
    private void iniciarAnimacao(ArrayList<String> resultado) {
         // Timer para o primeiro rolo
        timer1 = new Timer(100, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                indice1 = (indice1 + 1) % simbolo.length;
                lblSimbolo1.setIcon(new ImageIcon(this.getClass().getResource(retornaCaminhoImagemSimbolo(simbolo[indice1]))));
            }
        });

        // Timer para o segundo rolo
        timer2 = new Timer(100, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                indice2 = (indice2 + 1) % simbolo.length;
                lblSimbolo2.setIcon(new ImageIcon(this.getClass().getResource(retornaCaminhoImagemSimbolo(simbolo[indice2]))));
            }
        });

        // Timer para o terceiro rolo
        timer3 = new Timer(100, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                indice3 = (indice3 + 1) % simbolo.length;
                lblSimbolo3.setIcon(new ImageIcon(this.getClass().getResource(retornaCaminhoImagemSimbolo(simbolo[indice3]))));
            }
        });

        // Iniciar os três timers
        timer1.start();
        timer2.start();
        timer3.start();

        // Parar cada rolo após tempos diferentes
        pararAnimacao(resultado);
    }
    
    private void pararAnimacao(ArrayList<String> resultado) {
        // Timer para parar o primeiro rolo após 2 segundos
        Timer stop1 = new Timer(2000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                timer1.stop();
                lblSimbolo1.setText("");
                lblSimbolo1.setIcon(new ImageIcon(this.getClass().getResource(retornaCaminhoImagemSimbolo(resultado.get(0)))));// Define o símbolo final no segundo rolo
            }
        });
        stop1.setRepeats(false);
        stop1.start();

        // Timer para parar o segundo rolo após 3 segundos
        Timer stop2 = new Timer(3000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                timer2.stop();
                lblSimbolo2.setText("");
                lblSimbolo2.setIcon(new ImageIcon(this.getClass().getResource(retornaCaminhoImagemSimbolo(resultado.get(1)))));// Define o símbolo final no segundo rolo
            }
        });
        stop2.setRepeats(false);
        stop2.start();

        // Timer para parar o terceiro rolo após 4 segundos
        Timer stop3 = new Timer(4000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                timer3.stop();
                lblSimbolo3.setText("");
                lblSimbolo3.setIcon(new ImageIcon(this.getClass().getResource(retornaCaminhoImagemSimbolo(resultado.get(2)))));// Define o símbolo final no terceiro rolo
            }
        });
        stop3.setRepeats(false);
        stop3.start();
    }
    
    private String retornaCaminhoImagemSimbolo(String simbolo) {
        switch(simbolo) {
            case "limao": return "/view/image/limao.png";
            case "cereja": return "/view/image/cereja.png";
            case "sino": return "/view/image/sino.png";
            case "diamante": return "/view/image/diamante.png";
            case "sete": return "/view/image/sete.png";
            default : return "";
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel area;
    private javax.swing.JButton btnAdicionarSaldo;
    private javax.swing.JButton btnJogar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnVerificarHistorico;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JLabel lblSimbolo1;
    private javax.swing.JLabel lblSimbolo2;
    private javax.swing.JLabel lblSimbolo3;
    private javax.swing.JLabel lblValorSaldo;
    private javax.swing.JPanel simbolo1;
    private javax.swing.JPanel simbolo2;
    private javax.swing.JPanel simbolo3;
    private javax.swing.JToolBar tbOpcoes;
    // End of variables declaration//GEN-END:variables
}